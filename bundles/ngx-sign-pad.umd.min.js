!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("signature_pad"),require("@angular/core")):"function"==typeof define&&define.amd?define("ngx-sign-pad",["exports","signature_pad","@angular/core"],t):t(e["ngx-sign-pad"]={},e.SignaturePad,e.ng.core)}(this,function(e,t,n){"use strict";t=t&&t.hasOwnProperty("default")?t["default"]:t;var i={PNG:"image/png",SVG:"image/svg+xml",JPEG:"image/jpeg"},a=function(){function e(){this.signatureChange=new n.EventEmitter,this._options={dotSize:1,minWidth:1,maxWidth:2,penColor:"rgb(0, 0, 0)",debounceTime:10}}return Object.defineProperty(e.prototype,"options",{get:function(){return this._options},set:function(e){Object.assign(this._options,e)},enumerable:!0,configurable:!0}),e.prototype.ngAfterContentInit=function(){var e=this;this.signaturePad=new t(this.canvasElementRef.nativeElement,this.options),this.signaturePad.onEnd=function(){e.signatureChange.emit(e.signaturePad.toDataURL(e.type))}},e.prototype.clear=function(){this.signaturePad.clear(),this.signatureChange.emit(this.signaturePad.toDataURL(this.type))},e.decorators=[{type:n.Component,args:[{selector:"ngx-sign-pad",template:'<canvas #canvasElement libCanvasResize [debounceTime]="options?.debounceTime" [signaturePad]="signaturePad"></canvas>',styles:["\n  :host {\n    position: relative;\n    display: inline-block;\n    box-sizing: border-box;\n  }\n  :host canvas {\n    position: relative;\n    height: 100%;\n    width: 100%;\n  }\n  "]}]}],e.ctorParameters=function(){return[]},e.propDecorators={signature:[{type:n.Input}],signatureChange:[{type:n.Output}],type:[{type:n.Input}],options:[{type:n.Input}],canvasElementRef:[{type:n.ViewChild,args:["canvasElement"]}]},e}(),r=function(){function e(e,t){this.canvasElementRef=e,this.renderer=t}return e.prototype.ngAfterViewInit=function(){var n=this;this.renderer.listen(window,"resize",function(){var t=n.signaturePad.toDataURL(i.PNG);setTimeout(function(){n.resizeCanvas(),n.signaturePad.clear();var e=n.canvasElementRef.nativeElement;n.signaturePad.fromDataURL(t,{ratio:Math.max(window.devicePixelRatio||1,1),height:parseFloat(e.getAttribute("height")),width:parseFloat(e.getAttribute("width"))},function(e){e&&n.signaturePad.clear()})},100|n.debounceTime)}),this.resizeCanvas()},e.prototype.resizeCanvas=function(e){var t=this;void 0===e&&(e=!1);var n=this.canvasElementRef.nativeElement,i=this.renderer.parentNode(n),a=Math.max(window.devicePixelRatio||1,1);i.offsetHeight&&i.offsetWidth?(this.renderer.setAttribute(n,"width",(i.offsetWidth*a).toString()),this.renderer.setAttribute(n,"height",(i.offsetHeight*a).toString()),n.getContext("2d").scale(a,a)):e&&setTimeout(function(){t.resizeCanvas(!0)},100|this.debounceTime)},e.decorators=[{type:n.Directive,args:[{selector:"[libCanvasResize]"}]}],e.ctorParameters=function(){return[{type:n.ElementRef},{type:n.Renderer2}]},e.propDecorators={signaturePad:[{type:n.Input}],debounceTime:[{type:n.Input}]},e}(),o=function(){function e(){}return e.decorators=[{type:n.NgModule,args:[{declarations:[a,r],imports:[],exports:[a]}]}],e}();e.EImageType=i,e.SignPadComponent=a,e.CanvasResizeDirective=r,e.SignPadModule=o,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-sign-pad.umd.min.js.map