{"version":3,"file":"ngx-sign-pad.js.map","sources":["ng://ngx-sign-pad/lib/models/image-type.enum.ts","ng://ngx-sign-pad/lib/sign-pad.component.ts","ng://ngx-sign-pad/lib/canvas-resize.directive.ts","ng://ngx-sign-pad/lib/sign-pad.module.ts"],"sourcesContent":["export enum EImageType {\r\n    PNG = 'image/png',\r\n    SVG = 'image/svg+xml',\r\n    JPEG = 'image/jpeg'\r\n  }","import { Component, ViewChild, ElementRef, AfterContentInit, EventEmitter, Output, Input, OnChanges } from '@angular/core';\r\nimport SignaturePad from 'signature_pad';\r\nimport { EImageType } from './models/image-type.enum';\r\nimport { SignaturePadOptions } from './models/signaturePadOptions';\r\n\r\n@Component({\r\n  selector: 'ngx-sign-pad',\r\n  template: `<canvas #canvasElement libCanvasResize [debounceTime]=\"options?.debounceTime\" [signaturePad]=\"signaturePad\"></canvas>`,\r\n  styles: [`\r\n  :host {\r\n    position: relative;\r\n    display: inline-block;\r\n    box-sizing: border-box;\r\n  }\r\n  :host canvas {\r\n    position: relative;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  `]\r\n})\r\nexport class SignPadComponent implements AfterContentInit {\r\n\r\n  @Input() signature: string;\r\n  @Output() signatureChange = new EventEmitter<string>();\r\n\r\n  @Input() type: EImageType | string;\r\n  @Input() set options(value: SignaturePadOptions) {\r\n    Object.assign(this._options, value);\r\n  };\r\n\r\n  get options() : SignaturePadOptions {\r\n    return this._options;\r\n  }\r\n\r\n  @ViewChild('canvasElement') canvasElementRef: ElementRef<HTMLCanvasElement>;\r\n\r\n  public signaturePad: SignaturePad;\r\n  private _options: SignaturePadOptions;\r\n\r\n  constructor() {\r\n    this._options = {\r\n      dotSize: 1,\r\n      minWidth: 1,\r\n      maxWidth: 2,\r\n      penColor: 'rgb(0, 0, 0)',\r\n      debounceTime: 10\r\n    };\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.signaturePad = new SignaturePad(this.canvasElementRef.nativeElement, this.options);\r\n    this.signaturePad.onEnd = () => {\r\n      this.signatureChange.emit(this.signaturePad.toDataURL(this.type));\r\n    };\r\n  }\r\n\r\n  clear(){\r\n    this.signaturePad.clear();\r\n    this.signatureChange.emit(this.signaturePad.toDataURL(this.type));\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  AfterViewInit,\r\n  Renderer2,\r\n  ElementRef,\r\n  Input\r\n} from '@angular/core';\r\nimport SignaturePad from 'signature_pad';\r\nimport { EImageType } from './models/image-type.enum';\r\n\r\n@Directive({\r\n  selector: '[libCanvasResize]'\r\n})\r\nexport class CanvasResizeDirective implements AfterViewInit {\r\n\r\n  @Input() private signaturePad: SignaturePad;\r\n  @Input() private debounceTime?: number;\r\n\r\n  constructor(private canvasElementRef: ElementRef<HTMLCanvasElement>, private renderer: Renderer2) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.renderer.listen(window, 'resize', () => {\r\n      const currentSignature = this.signaturePad.toDataURL(EImageType.PNG);\r\n      setTimeout(() => {\r\n        this.resizeCanvas();\r\n        this.signaturePad.clear();\r\n        const canvas = this.canvasElementRef.nativeElement;\r\n        this.signaturePad.fromDataURL(currentSignature,\r\n          {\r\n            ratio: Math.max(window.devicePixelRatio || 1, 1),\r\n            height: parseFloat(canvas.getAttribute('height')),\r\n            width: parseFloat(canvas.getAttribute('width'))\r\n          },\r\n          (error) => {\r\n            if (error) {\r\n              this.signaturePad.clear();\r\n            }\r\n          });\r\n      }, this.debounceTime | 100);\r\n    });\r\n    this.resizeCanvas();\r\n  }\r\n\r\n  private resizeCanvas(initial: boolean = false) {\r\n    const canvas = this.canvasElementRef.nativeElement;\r\n    const container = this.renderer.parentNode(canvas);\r\n    const ratio = Math.max(window.devicePixelRatio || 1, 1);\r\n\r\n    if (container.offsetHeight && container.offsetWidth) {\r\n      this.renderer.setAttribute(canvas, 'width', (container.offsetWidth * ratio).toString());\r\n      this.renderer.setAttribute(canvas, 'height', (container.offsetHeight * ratio).toString());\r\n      canvas.getContext('2d').scale(ratio, ratio);\r\n    } else if (initial) {\r\n      setTimeout(() => { this.resizeCanvas(true) }, this.debounceTime | 100);\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SignPadComponent } from './sign-pad.component';\r\nimport { CanvasResizeDirective } from './canvas-resize.directive';\r\n\r\n@NgModule({\r\n  declarations: [SignPadComponent, CanvasResizeDirective],\r\n  imports: [\r\n  ],\r\n  exports: [SignPadComponent]\r\n})\r\nexport class SignPadModule { }\r\n"],"names":[],"mappings":"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"}
